<?php

require_once('cnapi_browse.helpers.inc');
require_once('cnapi_browse.preprocess.inc');

/**
 * Implements hook_menu().
 */
function cnapi_browse_menu() {
  $items['agenda/s'] = array(
    'title' => 'Uitgebreide zoek',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cnapi_browse_advanced_search_form'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'cnapi_browse.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function cnapi_browse_block_info() {
  $block['navigation']['info'] = t('CultuurNet API navigation');
  $block['navigation']['cache'] = DRUPAL_CACHE_GLOBAL;

  $block['search']['info'] = t('CultuurNet API search');
  $block['search']['cache'] = DRUPAL_CACHE_GLOBAL;

  $block['filters']['info'] = t('CultuurNet API filters');
  $block['filters']['cache'] = DRUPAL_CACHE_PER_PAGE;
  $block['search']['cache'] = DRUPAL_CACHE_GLOBAL;

  $block['active_filters']['info'] = t('CultuurNet API active filters');
  $block['active_filters']['cache'] = DRUPAL_CACHE_PER_PAGE;

  return $block;
}

/**
 * Implements hook_block_view().
 */
function cnapi_browse_block_view($delta = '') {
  module_load_include('inc', 'cnapi_browse', 'cnapi_browse.blocks');

  if (function_exists('cnapi_browse_block_' . $delta)) {
    return call_user_func('cnapi_browse_block_' . $delta);
  }
}

/**
 * Implements hook_theme().
 */
function cnapi_browse_theme() {
  return array(
    'cnapi_browse_navigation' => array(
      'variables' => array('items' => array()),
      'template' => 'cnapi-browse-navigation',
    ),
    'cnapi_browse_navigation_item' => array(
      'variables' => array('item' => array()),
      'template' => 'cnapi-browse-navigation-item',
    ),
    'cnapi_browse_filter_options' => array(
      'variables' => array('options' => array()),
      'template' => 'cnapi-browse-filter-options',
    ),
    'cnapi_browse_filter_option' => array(
      'variables' => array('option' => NULL),
      'template' => 'cnapi-browse-filter-option',
    ),
    'cnapi_browse_headings_element' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Implements hook_library().
 */
function cnapi_browse_library() {
  $path = drupal_get_path('module', 'cnapi_browse');

  // bgiframe
  $libraries['jquery.bgiframe'] = array(
    'title' => 'bgiframe',
    'website' => 'http://plugins.jquery.com/project/bgiframe',
    'version' => '2.1.1',
    'js' => array(
      $path . '/js/jquery.bgiframe.js' => array(),
    ),
  );

  // date
  $libraries['date'] = array(
    'title' => 'Datejs',
    'website' => 'http://www.datejs.com',
    'version' => 'alpha1',
    'js' => array(
      $path . '/js/date.js' => array(),
      $path . '/js/date_nl.js' => array(),
    ),
  );

  // jQuery Datepicker
  $libraries['jquery.datePicker'] = array(
    'title' => 'Datejs',
    'website' => 'http://www.kelvinluck.com/assets/jquery/datePicker/',
    'version' => '2',
    'js' => array(
      $path . '/js/jquery.datePicker.js' => array(),
    ),
    'css' => array(
      $path . '/css/datepicker.css' => array(),
    ),
    'dependencies' => array(
      array('cnapi_browse', 'jquery.bgiframe'),
      array('cnapi_browse', 'date'),
    ),
  );

  return $libraries;
}

function theme_cnapi_browse_headings_element($variables = NULL) {
  $output = '';

  $tree = cnapi_get_headings_tree();

  foreach ($tree as $heading_group) {
    $output .= '<div id="heading-group">';
    $output .= '<strong>' . $heading_group['name'] . '</strong>';
    foreach ($heading_group['children'] as $id => $heading) {
      if (isset($variables['element'][$id])) {
        $output .= drupal_render($variables['element'][$id]);
      }
    }
    $output .= '</div>';
  }

  return $output;
}