<?php

require_once('cnapi_extras.preprocess.inc');

/**
 * Implements hook_block_info().
 */
function cnapi_extras_block_info() {
  $block['wider_radius_search']['info'] = t('CultuurNet API wider radius search');
  $block['wider_radius_search']['cache'] = DRUPAL_CACHE_CUSTOM;
  
  $block['movie_results']['info'] = t('Movie results');
  $block['movie_results']['cache'] = DRUPAL_CACHE_CUSTOM;
  
  $block['movie_playlist']['info'] = t('Movie playlist');
  $block['movie_playlist']['cache'] = DRUPAL_CACHE_CUSTOM;
  
  $block['actor_playlist']['info'] = t('Actor playlist');
  $block['actor_playlist']['cache'] = DRUPAL_CACHE_CUSTOM;

  return $block;
}

/**
 * Implements hook_block_view().
 */
function cnapi_extras_block_view($delta = '') {
  module_load_include('inc', 'cnapi_extras', 'cnapi_extras.blocks');
  
  if (function_exists('cnapi_extras_block_is_visible_' . $delta)) {
    if (!call_user_func('cnapi_extras_block_is_visible_' . $delta)) {
      return FALSE;
    }
  }
  
  if (function_exists('cnapi_extras_block_cache_id_' . $delta) && $_SERVER['REQUEST_METHOD'] == 'GET' || $_SERVER['REQUEST_METHOD'] == 'HEAD') {
    $cid = cnapi_extras_block_get_cache_id($delta);
    
    if ($cache = cache_get($cid, 'cache_block')) {
      return $cache->data;
    }
    
    if (function_exists('cnapi_extras_block_view_' . $delta)) {
      $block = call_user_func('cnapi_extras_block_view_' . $delta);
      
      cache_set($cid, $block, 'cache_block', CACHE_TEMPORARY);
      
      return $block;
    }
  }
  else {
    if (function_exists('cnapi_extras_block_view_' . $delta)) {
      return call_user_func('cnapi_extras_block_view_' . $delta);
    }
  }
}

function cnapi_extras_block_get_cache_id($delta) {
  global $theme, $base_root, $user;

  // User 1 being out of the regular 'roles define permissions' schema,
  // it brings too many chances of having unwanted output get in the cache
  // and later be served to other users. We therefore exclude user 1 from
  // block caching.
  if (variable_get('block_cache', FALSE) && $user->uid != 1) {
    // Start with common sub-patterns: block identification, theme, language.
    $cid_parts[] = 'cnapi_extras';
    $cid_parts[] = $delta;
    $cid_parts[] = $theme;
    // If Locale is enabled but we have only one language we do not need it as cid
    // part.
    if (drupal_multilingual()) {
      foreach (language_types_configurable() as $language_type) {
        $cid_parts[] = $GLOBALS[$language_type]->language;
      }
    }
  
    $cid_parts = array_merge($cid_parts, call_user_func('cnapi_extras_block_cache_id_' . $delta));
    
    return implode(':', $cid_parts);
  }
}

/**
 * Implements hook_theme().
 */
function cnapi_extras_theme() {
  return array(
    'cnapi_extras_block_wider_radius_search' => array(
      'variables' => array('request_type' => NULL, 'city' => NULL, 'city_type' => NULL, 'radius' => NULL, 'request' => NULL, 'data' => NULL, 'total' => NULL),
      'template' => 'cnapi-extras-block-wider-radius-search',
    ),
    'cnapi_extras_block_movie_results' => array(
      'variables' => array('productions' => array(), 'form' => NULL, 'total' => NULL, 'more_request' => NULL),
      'template' => 'cnapi-extras-block-movie-results',
    ),
    'cnapi_extras_movie_summary' => array(
      'variables' => array('production' => NULL),
      'template' => 'cnapi-extras-block-movie',
    ),
    'cnapi_extras_movie_playlist' => array(
      'variables' => array('movies' => array()),
      'template' => 'cnapi-extras-movie-playlist',
    ),
    'cnapi_extras_actor_playlist_event' => array(
      'variables' => array('event' => array()),
      'template' => 'cnapi-extras-actor-playlist-event',
    ),
  );
}

function cnapi_extras_movie_search_form($form, &$form_state) {
  $form = array();

  $context = cnapi_ui_contexts('id', 'movie');
  
  $query = $context['query'];
  
  $options = array();
  
  $report = cnapi_get_report('production', $query);
  $productions = $report['production'];
  foreach ($productions as $cdbid => $production) {
    $options[$cdbid] = $production['name'];
  }
  
  asort($options);
  
  $options = array(CNAPI_OPTION_NONE => 'Selecteer een film') + $options;

  $form['cdbid'] = array(
    '#type' => 'select',
    '#title' => 'Film',
    '#options' => $options,
    '#default_value' => isset($request['query']['cdbid']) ? $request['query']['cdbid'] : '',
    '#attributes' => array('class' => array('autosubmit')),
  );
  
  $options = array();
  foreach ($report['location'] as $id => $location) {
    $options[$id] = $location['name'];
  }
  
  asort($options);
  
  $options = array(CNAPI_OPTION_NONE => 'Selecteer een locatie') + $options;
  
  $form['location'] = array(
    '#type' => 'select',
    '#title' => 'Locatie',
    '#options' => $options,
    '#attributes' => array('class' => array('autosubmit')),
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Filter',
  );
  
  return $form;
}

function cnapi_extras_movie_search_form_submit($form, &$form_state) {
  // The search form relies on control of the redirect destination for its
  // functionality, so we override any static destination set in the request,
  // for example by drupal_access_denied() or drupal_not_found()
  // (see http://drupal.org/node/292565).
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  // initialising the request object with the event context
  $request = array('context' => 'movie');

  cnapi_browse_process_form_values($request, $form_state['values']);

  cnapi_ui_goto($request);
}